#illegal  encoder0: illegal,            
#add      encoder3: add,                
#sub      encoder3: sub,                
#mul      encoder3: mul,                
#div      encoder3: div,                
#rem      encoder3: rem,                
#lshift   encoder3: lshift,             
#rshift   encoder3: rshift,             
#and      encoder3: and,                
#or       encoder3: or,                 
#invert   encoder2: invert,             
#xor      encoder3: xor,                
#min      encoder3: min,                
#max      encoder3: max,                
#eq       encoder3: eq,                 
#neq      encoder3: neq,                
#lt       encoder3: lt,                 
#gt       encoder3: gt,                 
#le       encoder3: le,                 
#ge       encoder3: ge,                
#incr     encoder2: incr,               
#decr     encoder2: decr,               
#set      encoder1i16: set,                
#ld       encoder2: ld,                 
#st       encoder2: st,                
#push     encoder2: push,               
#pop      encoder2: pop,                
#br       encoder1: rbranch,            
#brl      encoder2: rbranch-link,       
#bcr      encoder2: ?rbranch,           
#bcrl     encoder3: ?rbranch-link,      
#ueq      encoder3: ueq,                
#uneq     encoder3: uneq,               
#ult      encoder3: ult,                
#ugt      encoder3: ugt,                
#ule      encoder3: ule,                
#uge      encoder3: uge,                
#uand     encoder3: uand,               
#uor      encoder3: uor,                
#uinvert  encoder3: uinvert,            
#uxor     encoder3: uxor,               
#umin     encoder3: umin,               
#umax     encoder3: umax,               
#uadd     encoder3: uadd,               
#usub     encoder3: usub,               
#umul     encoder3: umul,               
#udiv     encoder3: udiv,               
#urem     encoder3: urem,               
#ulshift  encoder3: ulshift,            
#urshift  encoder3: urshift,            
#uincr    encoder2: uincr,              
#udecr    encoder2: udecr,             
#call     encoder1i16: call,
#condb    encoder1i16: ?branch,
#addi     encoder2i16: addi,
#subi     encoder2i16: subi,
#rshifti  encoder2i16: rshifti,
#lshifti  encoder2i16: lshifti,
#ldtincr  encoder2: ldtincr,           
#lti      encoder2i16: lti,            
#move     encoder2: move,              
#sttincr  encoder2: sttincr,           
#addw     encoder3: addw,              
#subw     encoder3: subw,              
#pushw    encoder2: pushw,             
#popw     encoder2: popw,              
#return   encoder1: return,            
#creturn  encoder2: ?return,           
#invertw  encoder2: invertw,           
#bi       encoderi16: branch,          
#eqz      encoder2: eqz,
#neqz     encoder2: neqz,
#ltz      encoder2: ltz,
#gtz      encoder2: gtz,
#lez      encoder2: lez,
#gez      encoder2: gez,
#andi     encoder2i16: andi,
#uandi    encoder2i16: uandi,
#muli     encoder2i16: muli,
#divi     encoder2i16: divi,
#pushi    encoder1i16: pushi,
#memincr  encoder1: memincr,           
#memdecr  encoder1: memdecr,           
#stop     encoder1: stop,              
