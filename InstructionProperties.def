/**
 * Contains all of the defined properties for different instructions, defining it implies
 * that it is true
 */

// DeclareProperty(InstructionName, PropertyName) 
#define OfGroup(group, op) DeclareProperty(group ## op, Is ## group ## Operation)
#define GroupArithmetic(op) OfGroup(Arithmetic, op)
#define GroupCompare(op) OfGroup(Compare, op)
#define GroupBranch(op) OfGroup(Branch, op)
#define GroupMemory(op) OfGroup(Memory, op)
#define Memory(op, prop) \
    DeclareProperty(Memory ## op, prop) \
    GroupMemory(op)
#define Stack(op) Memory(Stack ## op, IsStackOperation)
#define Code(op) Memory(Code ## op, IsCodeOperation)
#define Data(op) Memory(Data ## op, IsDataOperation)
#define IO(op) Memory(IO ## op, IsIOOperation)
#define IP(op) Memory(op, ManipulatesIP)
Stack(Push)
Stack(PushImmediateValue)
Stack(Pop)
Code(LoadWithOffset)
Code(StoreWithOffset)
Data(LoadWithOffset)
Data(StoreWithOffset)
Data(StoreImmediateValue)
IO(LoadWithOffset)
IO(StoreWithOffset)
IO(StoreImmediateValue)
IP(MoveToIP)
IP(MoveFromIP)
GroupMemory(CopyRegister)
GroupMemory(SwapRegisters)
GroupMemory(AssignRegisterImmediate)
DeclareProperty(BranchRelativeImmediateAndLink, IsBranchImmediateInstruction)
DeclareProperty(BranchRelativeImmediate, IsBranchImmediateInstruction)
DeclareProperty(BranchImmediateAndLink, IsBranchImmediateInstruction)
DeclareProperty(BranchImmediate, IsBranchImmediateInstruction)
DeclareProperty(BranchRelativeImmediate, UsesRelativeOffset)
DeclareProperty(BranchRelativeImmediateAndLink, UsesRelativeOffset)
DeclareProperty(BranchRelativeImmediateAndLink, UsesLinkRegister)
DeclareProperty(BranchImmediateAndLink, UsesLinkRegister)
DeclareProperty(ArithmeticRemainderSigned, DisallowsDivideByZero)
DeclareProperty(ArithmeticRemainderUnsigned, DisallowsDivideByZero)
DeclareProperty(ArithmeticDivideSigned, DisallowsDivideByZero)
DeclareProperty(ArithmeticDivideUnsigned, DisallowsDivideByZero)
DeclareProperty(ArithmeticRemainderSigned, IsRemainderOperation)
DeclareProperty(ArithmeticRemainderUnsigned, IsRemainderOperation)
DeclareProperty(ArithmeticDivideSigned, IsDivideOperation)
DeclareProperty(ArithmeticDivideUnsigned, IsDivideOperation)
#define ArithmeticSignedUnsigned(op) \
        GroupArithmetic(op ## Unsigned) \
        DeclareProperty(Arithmetic ## op ## Unsigned, IsOrdinalOperation) \
        GroupArithmetic(op ## Signed ) \
        DeclareProperty(Arithmetic ## op ## Signed, IsIntegerOperation)
ArithmeticSignedUnsigned(Add)
ArithmeticSignedUnsigned(Subtract)
ArithmeticSignedUnsigned(Multiply)
ArithmeticSignedUnsigned(Divide)
ArithmeticSignedUnsigned(Remainder)
ArithmeticSignedUnsigned(Max)
ArithmeticSignedUnsigned(Min)
ArithmeticSignedUnsigned(ShiftLeft)
ArithmeticSignedUnsigned(ShiftRight)
ArithmeticSignedUnsigned(AddImmediate)
ArithmeticSignedUnsigned(SubtractImmediate)
ArithmeticSignedUnsigned(MultiplyImmediate)
ArithmeticSignedUnsigned(DivideImmediate)
ArithmeticSignedUnsigned(RemainderImmediate)
GroupArithmetic(ShiftLeftImmediateUnsigned)
GroupArithmetic(ShiftRightImmediateUnsigned)
#undef ArithmeticSignedUnsigned
#undef IP
#undef IO
#undef Data
#undef Code
#undef Stack
#undef Memory
#undef GroupMemory 
#undef GroupBranch 
#undef GroupArithmetic
#undef GroupCompare
