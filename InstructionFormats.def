/**
 * This file contains the binding between a given operation and its corresponding
 * format. Update this file when adding new type information
 */
// error is just zero and is not part of a group
#define Instruction(group, op, Format) X(group ## op, Format)
#define Arithmetic(op, Format) Instruction(Arithmetic, op, Format)
#define ArithmeticSigned(op, Format) Arithmetic(op ## Signed, Format)
#define ArithmeticUnsigned(op, Format) Arithmetic(op ## Unsigned, Format)
#define ArithmeticSignedUnsigned(op, Format) \
    ArithmeticSigned(op, Format) \
    ArithmeticUnsigned(op, Format)
#define ArithmeticSignedImmediate(op) Arithmetic(op ## SignedImmediate, TwoRegisterS8)
#define ArithmeticUnsignedImmediate(op) Arithmetic(op ## UnsignedImmediate, TwoRegisterU8)
#define ArithmeticSignedUnsignedImmediate(op) \
        ArithmeticSignedImmediate(op) \
        ArithmeticUnsignedImmediate(op)
#define Memory(op, Format) Instruction(Memory, op, Format)
#define Stack(op, Format) Memory(Stack ## op, Format)
#define Data(op, Format) Memory(Data ## op, Format)
#define Code(op, Format) Memory(Code ## op, Format)
#define IO(op, Format) Memory(IO ## op, Format)
#define Compare(op, Format) Instruction(Compare, op, Format)
#define NormalCompare(op) Compare(op, ThreeRegister)
#define NormalSignedCompare(op) NormalCompare(op ## Signed)
#define NormalUnsignedCompare(op) NormalCompare(op ## Unsigned)
#define NormalSignedUnsignedCompare(op) \
        NormalSignedCompare(op) \
        NormalUnsignedCompare(op)
#define RawImm8Compare(op, Format) Compare(op ## Immediate8, Format)
#define Imm8Compare(op) RawImm8Compare(op, TwoRegisterU8)
#define Imm8SignedCompare(op) RawImm8Compare(op ## Signed , TwoRegisterS8)
#define Imm8UnsignedCompare(op) Imm8Compare(op ## Unsigned)
#define Imm8SignedUnsignedCompare(op) \
        Imm8SignedCompare(op) \
        Imm8UnsignedCompare(op)
#define Branch(op, Format) Instruction(Branch, op, Format)
    ArithmeticSignedUnsigned(Add, ThreeRegister)
    ArithmeticSignedUnsigned(Subtract, ThreeRegister)
    ArithmeticSignedUnsigned(Multiply, ThreeRegister)
    ArithmeticSignedUnsigned(Divide, ThreeRegister)
    ArithmeticSignedUnsigned(Remainder, ThreeRegister)
    ArithmeticSignedUnsigned(ShiftLeft, ThreeRegister)
    ArithmeticSignedUnsigned(ShiftRight, ThreeRegister)
    ArithmeticSignedUnsigned(Max, ThreeRegister)
    ArithmeticSignedUnsigned(Min, ThreeRegister)
    Arithmetic(BitwiseNot, TwoRegister)
    Arithmetic(BitwiseAnd, ThreeRegister)
    Arithmetic(BitwiseOr, ThreeRegister)
    Arithmetic(BitwiseXor, ThreeRegister)
    Arithmetic(BitwiseNor, ThreeRegister)
    Arithmetic(BitwiseNand, ThreeRegister)
    ArithmeticSignedUnsignedImmediate(Add)
    ArithmeticSignedUnsignedImmediate(Subtract)
    ArithmeticSignedUnsignedImmediate(Multiply)
    ArithmeticSignedUnsignedImmediate(Divide)
    ArithmeticSignedUnsignedImmediate(Remainder)
    ArithmeticUnsignedImmediate(ShiftLeft)
    ArithmeticUnsignedImmediate(ShiftRight)
    Memory(CopyRegister, TwoRegister)
    Memory(SwapRegisters, TwoRegister)
    Memory(AssignRegisterImmediate, OneRegisterU16)
    Stack(Push, TwoRegister)
    Stack(Pop, TwoRegister)
    Stack(PushImmediateValue, OneRegisterU16)
    Data(LoadWithOffset, TwoRegisterU8)
    Data(StoreWithOffset, TwoRegisterU8)
    Data(StoreImmediateValue, OneRegisterU16)
    Code(LoadWithOffset, TwoRegisterU8)
    Code(StoreWithOffset, TwoRegisterU8)
    IO(LoadWithOffset, TwoRegisterU8)
    IO(StoreWithOffset, TwoRegisterU8)
    IO(StoreImmediateValue, OneRegisterU16)
    Memory(MoveFromIP, OneRegister)
    Memory(MoveToIP, OneRegister)
    Branch(Immediate, OneRegisterU16)
    Branch(ConditionalImmediate, OneRegisterU16)
    Branch(RelativeImmediate, OneRegisterS16)
    Branch(ConditionalRelativeImmediate, OneRegisterS16)
    Branch(RelativeImmediateAndLink, OneRegisterS16)
    Branch(Register, OneRegister)
    Branch(ConditionalRegister, TwoRegister)
    Branch(RegisterAndLink, TwoRegister)
    Branch(ImmediateAndLink, OneRegisterU16)
    Branch(ConditionalRegisterAndLink, ThreeRegister)
    Branch(Select, ThreeRegister)
    NormalCompare(Equals)
    NormalCompare(NotEquals)
    NormalSignedUnsignedCompare(LessThan)
    NormalSignedUnsignedCompare(GreaterThan)
    NormalSignedUnsignedCompare(LessThanOrEqualTo)
    NormalSignedUnsignedCompare(GreaterThanOrEqualTo)
    Imm8Compare(Equals)
    Imm8Compare(NotEquals)
    Imm8SignedUnsignedCompare(LessThan)
    Imm8SignedUnsignedCompare(GreaterThan)
    Imm8SignedUnsignedCompare(LessThanOrEqualTo)
    Imm8SignedUnsignedCompare(GreaterThanOrEqualTo)

#undef NormalSignedCompare
#undef NormalUnsignedCompare 
#undef NormalCompare
#undef NormalSignedUnsignedCompare
#undef Imm8SignedUnsignedCompare
#undef RawImm8Compare
#undef Imm8Compare
#undef Imm8SignedCompare
#undef Imm8UnsignedCompare

#undef Compare
#undef Instruction

#undef ArithmeticSignedImmediate
#undef ArithmeticUnsignedImmediate
#undef Arithmetic
#undef ArithmeticSigned
#undef ArithmeticUnsigned
#undef ArithmeticSignedUnsigned
#undef Branch
#undef Stack
#undef Data
#undef Code
#undef IO
#undef Memory
