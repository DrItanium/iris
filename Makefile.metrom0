# extracted from adafruit arduino package files
F_CPU_VALUE := 48000000L
CXX := arm-unknown-linux-gnueabi-g++
LD := ${CXX}
MCU_KIND := cortex-m0plus
ARM_FLAGS := -mcpu=${MCU_KIND} \
	-mthumb \
	-D__SAMD21G18A__ \
	-DARDUINO_SAMD_ZERO \
	-DARM_MATH_CM0PLUS \
	-DADAFRUIT_METRO_M0_EXPRESS \
	-DF_CPU=${F_CPU_VALUE}
FFLAGS := -ffunction-sections \
	-fdata-sections \
	-fno-threadsafe-statics \
	-nostdlib \
	--param max-inline-insns-single=500 \
	-fno-rtti \
	-fno-exceptions

LD_FLAGS := -Wl,--cref \
	-Wl,--check-sections \
	-Wl,--gc-sections \
	-Wl,--unresolved-symbols=report-all \
	-Wl,--warn-common \
	-Wl,--warn-section-align
ARDUINO_ROOT := ${HOME}/.arduino15/
ADAFRUIT_VERSION := 1.5.7
ATMEL_CMSIS_VERSION := 1.2.0
CMSIS_ATMEL_SAMD_ROOT := ${ARDUINO_ROOT}/packages/arduino/tools/CMSIS-Atmel/${ATMEL_CMSIS_VERSION}
ADAFRUIT_SAMD_ROOT := ${ARDUINO_ROOT}/packages/adafruit/hardware/samd/${ADAFRUIT_VERSION}
INCLUDES := -I${ADAFRUIT_SAMD_ROOT}/variants/metro_m0 \
			-I${ADAFRUIT_SAMD_ROOT}/cores/arduino \
			-I${CMSIS_ATMEL_SAMD_ROOT}/CMSIS/Device/ATMEL \
			-I${ADAFRUIT_SAMD_ROOT}/bootloaders/mzero/Bootloader_D21/src/ASF/thirdparty/CMSIS/Include

GENFLAGS := -Wall -Wextra -std=gnu++17 ${ARM_FLAGS}
OPTIMIZATION_FLAGS := -Os
CXXFLAGS := ${GENFLAGS} ${OPTIMIZATION_FLAGS} ${DEBUGGING_FLAGS} ${INCLUDES}
LDFLAGS := ${LIBS} ${OPTIMIZATION_FLAGS} ${ARM_FLAGS}

CORE_OBJS := iris.o

BACKEND_OBJS := backends/arduino/arduino_core.o

IRIS_ARCHIVE := libiris.a
IRIS_BACKEND_ARCHIVE := libiris_arduino.a

IRIS_TESTER_OBJS := opcode_tester.o

IRIS_TESTER := iris_test

OBJS := $(CORE_OBJS) \
		$(BACKEND_OBJS)
PROGS := $(IRIS_ARCHIVE) \
		 $(IRIS_BACKEND_ARCHIVE)


all: options $(PROGS)

options:
	@echo Build Options
	@echo ------------------
	@echo CXXFLAGS = ${CXXFLAGS}
	@echo LDFLAGS = ${LDFLAGS}
	@echo ------------------

$(IRIS_ARCHIVE): $(CORE_OBJS)
	@echo AR ${IRIS_ARCHIVE}
	@${AR} rcs ${IRIS_ARCHIVE} ${CORE_OBJS}

$(IRIS_BACKEND_ARCHIVE): $(BACKEND_OBJS)
	@echo AR ${IRIS_BACKEND_ARCHIVE}
	@${AR} rcs ${IRIS_BACKEND_ARCHIVE} ${BACKEND_OBJS}

.cc.o :
	@echo CXX $<
	@${CXX} -I. -Ilib ${CXXFLAGS} -c $< -o $@

clean: 
	@echo Cleaning...
	@rm -f ${OBJS} ${PROGS}



.PHONY: options

# generated via g++ -MM -std=c++17 *.cc


arduino_core.o: backends/arduino/arduino_core.cc \
 backends/arduino/arduino_core.h \
 types.h iris.h register.h
iris.o: iris.cc types.h iris.h register.h mem_bank.h opcodes.h \
 InstructionFormats.def
